[{"B:\\Web Dev\\mini-dbms\\client\\src\\index.tsx":"1","B:\\Web Dev\\mini-dbms\\client\\src\\reportWebVitals.ts":"2","B:\\Web Dev\\mini-dbms\\client\\src\\App.tsx":"3","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Home.tsx":"4","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Nav.tsx":"5","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Search.tsx":"6","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Orders.tsx":"7"},{"size":500,"mtime":1609862374814,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":165,"mtime":1609858812824,"results":"11","hashOfConfig":"9"},{"size":1340,"mtime":1609871349724,"results":"12","hashOfConfig":"9"},{"size":2858,"mtime":1609872176574,"results":"13","hashOfConfig":"9"},{"size":235,"mtime":1609863461424,"results":"14","hashOfConfig":"9"},{"size":258,"mtime":1609868614853,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15xxjq0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"B:\\Web Dev\\mini-dbms\\client\\src\\index.tsx",[],["32","33"],"B:\\Web Dev\\mini-dbms\\client\\src\\reportWebVitals.ts",[],"B:\\Web Dev\\mini-dbms\\client\\src\\App.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Home.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Nav.tsx",["34"],"import React, { useEffect, useState } from 'react'\r\nimport Logo from \"../resource/logo.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface NavProp { }\r\nconst Nav: React.FC<NavProp> = () => {\r\n    const [toggle, setToggle] = useState<string>('toggle')\r\n    const [navIsOpen, setNavIsOpen] = useState<boolean>(false)\r\n    const [navH, setNavH] = useState<string>('100vh')\r\n    const toggleNav = () => {\r\n        if (!navIsOpen) {\r\n            setToggle('toggle change')\r\n            setNavH('0')\r\n        } else {\r\n            setToggle('toggle')\r\n            setNavH('100vh')\r\n        }\r\n        setNavIsOpen(!navIsOpen)\r\n    }\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <Header imgUri={Logo} />\r\n                <div className=\"links\">\r\n                    <NavLink to=\"/home\" label=\"Home\" toggle={() => toggleNav()} />\r\n                    <NavLink to=\"/search\" label=\"Search\" toggle={() => toggleNav()} />\r\n                    <NavLink to=\"/orders\" label=\"Orders\" toggle={() => toggleNav()} />\r\n                </div>\r\n                <div className={toggle} onClick={() => toggleNav()}>\r\n                    <div className=\"bar1\"></div>\r\n                    <div className=\"bar2\"></div>\r\n                    <div className=\"bar3\"></div>\r\n                </div>\r\n            </nav>\r\n            <motion.div\r\n                className=\"nav-menu\"\r\n                initial={{ y: navH }}\r\n                animate={{ y: navH }}\r\n                transition={{ ease: 'anticipate', duration: .4 }}>\r\n                <NavLink to=\"/home\" label=\"Home\" toggle={() => toggleNav()} />\r\n                <NavLink to=\"/search\" label=\"Search\" toggle={() => toggleNav()} />\r\n                <NavLink to=\"/orders\" label=\"Orders\" toggle={() => toggleNav()} />\r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface HeaderProp {\r\n    imgUri: string;\r\n}\r\nconst Header: React.FC<HeaderProp> = ({ imgUri }) => {\r\n    return (\r\n        <div className=\"header-img\">\r\n            {/* <img src={imgUri} alt=\"Header Image\" /> */}\r\n            Art Gallery\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface NavLinkProps {\r\n    to: string;\r\n    label: string;\r\n    toggle: Function;\r\n}\r\nconst NavLink: React.FC<NavLinkProps> = ({ to, label, toggle }) => {\r\n    const history = useHistory();\r\n\r\n    const [currentpath, setCurrentpath] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        setCurrentpath(history.location.pathname)\r\n        history.listen(({ pathname }) => {\r\n            setCurrentpath(pathname)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={currentpath === to ? 'nav-link selected-nav-link' : 'nav-link'} onClick={() => toggle()}>\r\n            <Link to={to}>\r\n                <span>{label}</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Search.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Orders.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":76,"column":8,"nodeType":"41","endLine":76,"endColumn":10,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [history]",{"range":"48","text":"49"},[2587,2589],"[history]"]