[{"B:\\Web Dev\\mini-dbms\\client\\src\\index.tsx":"1","B:\\Web Dev\\mini-dbms\\client\\src\\reportWebVitals.ts":"2","B:\\Web Dev\\mini-dbms\\client\\src\\App.tsx":"3","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Home.tsx":"4","B:\\Web Dev\\mini-dbms\\client\\src\\components\\api.ts":"5","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Loading.tsx":"6","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\BuyArt.tsx":"7","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Orders.tsx":"8","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Search.tsx":"9","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Nav.tsx":"10","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\ViewArt.tsx":"11","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Profile.tsx":"12","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\animation\\FadeInBottom.tsx":"13","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Error.tsx":"14","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\animation\\FadeInAnim.tsx":"15","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\CreateArt.tsx":"16"},{"size":500,"mtime":1609862374814,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":165,"mtime":1609858812824,"results":"20","hashOfConfig":"18"},{"size":5163,"mtime":1611162935408,"results":"21","hashOfConfig":"18"},{"size":6972,"mtime":1611168691447,"results":"22","hashOfConfig":"18"},{"size":229,"mtime":1610451480167,"results":"23","hashOfConfig":"18"},{"size":4048,"mtime":1611046040648,"results":"24","hashOfConfig":"18"},{"size":1335,"mtime":1610821350345,"results":"25","hashOfConfig":"18"},{"size":4410,"mtime":1611163183261,"results":"26","hashOfConfig":"18"},{"size":4316,"mtime":1611205457449,"results":"27","hashOfConfig":"18"},{"size":6129,"mtime":1611204312796,"results":"28","hashOfConfig":"18"},{"size":21629,"mtime":1611205125125,"results":"29","hashOfConfig":"18"},{"size":540,"mtime":1611045812514,"results":"30","hashOfConfig":"18"},{"size":479,"mtime":1610813338671,"results":"31","hashOfConfig":"18"},{"size":535,"mtime":1610738944309,"results":"32","hashOfConfig":"18"},{"size":4066,"mtime":1611052471222,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"15xxjq0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"B:\\Web Dev\\mini-dbms\\client\\src\\index.tsx",[],["70","71"],"B:\\Web Dev\\mini-dbms\\client\\src\\reportWebVitals.ts",[],"B:\\Web Dev\\mini-dbms\\client\\src\\App.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Home.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\api.ts",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Loading.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\BuyArt.tsx",["72","73"],"import { useEffect, useState } from 'react'\r\nimport { Link, RouteComponentProps } from 'react-router-dom'\r\nimport { placeOrder, search } from '../api'\r\nimport { Art } from '../ContextTypes'\r\nimport FadeInTop from './animation/FadeInAnim'\r\n\r\nconst Cookies = require('js-cookie')\r\n\r\ntype BuyArtProps = {\r\n    art: string\r\n}\r\nconst BuyArt = ({ match }: RouteComponentProps<BuyArtProps>) => {\r\n    const [foundArt, setFoundArt] = useState<Art>()\r\n    const [orderBuy, setOrderBuy] = useState<string>(\"Place Order\")\r\n    const [addressText, setAddressText] = useState<string>('')\r\n    const [username, setUsername] = useState<string>('')\r\n    const [errorMessage, setErrorText] = useState<string>('')\r\n\r\n    const getData = async () => {\r\n        search(match.params.art).then((data) => {\r\n            setFoundArt(data)\r\n        })\r\n    }\r\n\r\n    const handleAddressText = () => {\r\n        var text = (document.getElementById('address') as HTMLInputElement).value\r\n        setAddressText(text);\r\n    }\r\n\r\n    function getDueDate() {\r\n        var date = new Date(Date.now())\r\n        date.setDate(date.getDate() + 7)\r\n        return date.toString()\r\n    }\r\n\r\n    const handleBuy = () => {\r\n        if (addressText.length !== 0 && username !== \"null\") {\r\n            setErrorText('')\r\n            setOrderBuy('Ordering...')\r\n            placeOrder({ username: username, artname: match.params.art, address: addressText, booked: Date().toString().substring(4, 15), due: getDueDate().substring(4, 15) }).then((data) => {\r\n                // console.log(data);\r\n                if (data.username === username) {\r\n                    setOrderBuy('Success!')\r\n                    window.location.replace('/profile')\r\n                } else {\r\n                    setOrderBuy('Place Order')\r\n                    setErrorText('You have already bought this item!')\r\n                }\r\n            })\r\n        } else if (username === \"null\") {\r\n            setErrorText(\"You need to login to place order!\")\r\n        } else {\r\n            setErrorText('Fill up the address!')\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const username = Cookies.get('username');\r\n        setUsername(username === undefined ? \"null\" : username)\r\n        getData()\r\n\r\n    }, [])\r\n    return (\r\n        <FadeInTop children={\r\n            <div className=\"content-body\">\r\n                {/* <div className=\"nav-space\"></div> */}\r\n                <div className=\"buy-input\">\r\n                    <h2>Enter delivery address</h2>\r\n                    <input type=\"text\" id=\"address\" placeholder=\"Address\" aria-expanded={true} onChange={() => handleAddressText()} />\r\n                    <span></span>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={() => handleBuy()} className=\"button\">{orderBuy}</button>\r\n                        <div className=\"art-button-space\"></div>\r\n                        {errorMessage === \"You need to login to place order!\" ? <Link to=\"/profile\" className=\"button\" >Login</Link> : <span></span>}\r\n                    </div>\r\n                    {errorMessage.length !== 0 ? <div className=\"error-message\">{errorMessage}</div> : <span></span>}\r\n                </div>\r\n                <div className=\"buy-art\">\r\n                    <img alt={foundArt?.name} src={foundArt?.imageurl} className=\"art-image\" />\r\n                    <div>\r\n                        <div className=\"art-name\"> {foundArt?.name}</div>\r\n                        <div className=\"art-about\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium autem sed tenetur illo, magnam accusamus tempora doloremque modi, odio, earum sunt quas quisquam quae nesciunt ducimus ullam eligendi quos cupiditate.</div>\r\n                        <div className=\"art-rating\">Rating: {foundArt?.rating}</div>\r\n                        <div className=\"art-price\">Price: ${foundArt?.price}</div>\r\n                    </div>\r\n                </div>\r\n            </div>} classname=\"\" />\r\n    )\r\n}\r\n\r\nexport default BuyArt\r\n","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Orders.tsx",["74"],"import { motion } from 'framer-motion'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getOrderList } from '../api'\r\nimport { Orders } from '../ContextTypes'\r\nconst Cookies = require('js-cookie')\r\n\r\n\r\ninterface OrdersList {\r\n    orders: Orders[],\r\n}\r\ninterface OrderProp { }\r\nconst OrderList: React.FC<OrderProp> = () => {\r\n    const [ordersList, setOrdersList] = useState<OrdersList>()\r\n    const [username, setUsername] = useState<string>('')\r\n    useEffect(() => {\r\n        const username = Cookies.get('username');\r\n        setUsername(username === undefined ? \"\" : username)\r\n        getOrderList(username).then((data) => {\r\n            setOrdersList(data)\r\n        })\r\n    }, [])\r\n    return (\r\n        <motion.div\r\n            initial={{ scaleY: .1 }}\r\n            animate={{ scaleY: 1 }}\r\n            transition={{ ease: \"easeOut\", duration: .2 }}\r\n            className=\"orders\"\r\n        >\r\n            {ordersList !== undefined && ordersList !== null && ordersList.orders !== undefined ?\r\n                ordersList.orders.map((order, index) => (\r\n                    <div key={index} className=\"orders-list\">\r\n                        <h3> • {order.artname}</h3>\r\n                    </div>\r\n                ))\r\n                : <div >Empty</div>}\r\n        </motion.div>\r\n    )\r\n}\r\nexport default OrderList\r\n","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Search.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Nav.tsx",["75","76","77"],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\ViewArt.tsx",["78"],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Profile.tsx",["79","80"],"import React, { useEffect, useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { allOrders, allUsers, deleteArt, deleteOrder, deleteUser, getArt, getDeliveries, getOrderList, getpostedart, getUser, login, logout, register } from '../api'\r\n// import {  useHistory } from 'react-router-dom'\r\nimport { Art, Orders, UserType } from '../ContextTypes'\r\nimport FadeInTop from './animation/FadeInAnim'\r\nimport ErrorBig from './Error'\r\nimport FadeInBottom from './animation/FadeInBottom'\r\nimport { Link } from 'react-router-dom'\r\nimport Delete from '../resource/delete.png'\r\n\r\n\r\nconst Cookies = require('js-cookie')\r\n\r\ninterface ProfileProps { }\r\nconst Profile: React.FC<ProfileProps> = () => {\r\n    const [username, setUsername] = useState<string>('')\r\n    const [errorMessage, setErrorMessage] = useState<string>('')\r\n    const [loading, setLoading] = useState<string>(\"Log In\")\r\n    const [loginState, setLoginState] = useState<boolean>(true)\r\n    const [regLoading, setRegLoading] = useState<string>(\"Register\")\r\n    const [userDet, setUserDet] = useState<UserType>();\r\n    const [ordersList, setOrdersList] = useState([])\r\n    const [deliveryList, setDeliveryList] = useState([])\r\n    const [artList, setArtList] = useState([])\r\n    // const history = useHistory()\r\n\r\n\r\n    const [usernameText, setUsernameText] = useState<string>('')\r\n    const [passwordText, setPasswordText] = useState<string>('')\r\n    const [useremailText, setUseremailText] = useState<string>('')\r\n    const [userType, setUserType] = useState<number>(2)\r\n    const [usernameName, setUsernameName] = useState<string>('')\r\n\r\n    const handleText = () => {\r\n        var text = (document.getElementById('username-text') as HTMLInputElement).value\r\n        setUsernameText(text);\r\n    }\r\n    const handlePassword = () => {\r\n        var text = (document.getElementById('password-text') as HTMLInputElement).value\r\n        setPasswordText(text);\r\n    }\r\n\r\n    const handleRegUsernameName = () => {\r\n        var text = (document.getElementById('user-detail-name') as HTMLInputElement).value\r\n        setUsernameName(text);\r\n    }\r\n    const handleRegUsername = () => {\r\n        var text = (document.getElementById('user-detail-username') as HTMLInputElement).value\r\n        setUsernameText(text);\r\n    }\r\n    const handleRegPassword = () => {\r\n        var text = (document.getElementById('user-detail-password') as HTMLInputElement).value\r\n        setPasswordText(text);\r\n    }\r\n    const handleRegEmail = () => {\r\n        var text = (document.getElementById('user-detail-email') as HTMLInputElement).value\r\n        setUseremailText(text);\r\n    }\r\n\r\n    const handleLogIn = () => {\r\n        if (usernameText.length !== 0 && passwordText.length !== 0) {\r\n            setErrorMessage(\"\")\r\n            // console.log(\"Ready\");\r\n            // console.log(usernameText + \"...\" + passwordText);\r\n            setLoading(\"Loading...\")\r\n            login(usernameText, passwordText).then((res) => {\r\n                // console.log(res);\r\n                if (res?.status === 200) {\r\n                    if (res.data.error === null || res.data.error === undefined) {\r\n                        Cookies.set(\"username\", res?.data.username, { expires: 7 })\r\n                        // history.push(\"/home\");\r\n                        window.location.reload()\r\n                        setLoading(\"Successful!\")\r\n                    } else if (res.data.error != null) {\r\n                        setErrorMessage(res.data.error.toString())\r\n                        setLoading(\"Login\")\r\n                    }\r\n                } else if (res?.status === 404) {\r\n                    setErrorMessage(\"Server faced some error!\")\r\n                    setLoading(\"Login\")\r\n                }\r\n            })\r\n        } else setErrorMessage(\"Fill all details!\")\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        if (usernameText.length !== 0 && passwordText.length !== 0 && useremailText.length !== 0 && usernameName.length !== 0) {\r\n            // console.log(\"Registering user\");\r\n            setRegLoading(\"Registering...\")\r\n            register(usernameText, usernameName, useremailText, passwordText, userType).then((res) => {\r\n                if (res?.status === 200) {\r\n                    if (res.data.error === null || res.data.error === undefined) {\r\n                        Cookies.set(\"username\", res?.data.username, { expires: 7 })\r\n                        window.location.reload()\r\n                        setRegLoading(\"Registered!\")\r\n                    } else if (res.data.error != null) {\r\n                        setErrorMessage(res.data.error.toString())\r\n                        setRegLoading(\"Register\")\r\n                    }\r\n                } else if (res?.status === 404) {\r\n                    setErrorMessage(\"Server faced some error!\")\r\n                    setRegLoading(\"Register!\")\r\n                }\r\n            })\r\n        } else setErrorMessage(\"Fill all details!\")\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        // console.log(\"Trying logout\");\r\n        logout().then((res) => {\r\n            if (res?.status === 200) {\r\n                Cookies.remove(\"username\");\r\n                window.location.replace('/home')\r\n                // console.log(\"logged out\");\r\n            } else {\r\n                setErrorMessage(\"Unable to logout :(\")\r\n            }\r\n        })\r\n\r\n    }\r\n    useEffect(() => {\r\n        const username = Cookies.get('username');\r\n        setUsername(username === undefined ? \"null\" : username)\r\n        getUser(username !== undefined ? username : \"\").then((res) => {\r\n            if (res?.data.usertype === 1) {\r\n                getpostedart(username).then((res) => {\r\n                    // console.log(res);\r\n                    setArtList(res);\r\n                })\r\n            }\r\n            setUserDet(res?.data);\r\n            getOrderList(res?.data.username).then((data) => {\r\n                setOrdersList(data)\r\n            })\r\n            getDeliveries(username).then((data) => {\r\n                if (data.length !== 0)\r\n                    setDeliveryList(data.reverse());\r\n            })\r\n        })\r\n        // console.log(username);\r\n    }, [])\r\n    return (\r\n        <div className=\"content-body\">\r\n            {\r\n                userDet?.usertype !== 0 ?\r\n                    <div className=\"profile-card-holder\">\r\n                        {username !== \"null\"\r\n                            ? <UserDetail username={username} userDet={userDet} handleLogout={() => handleLogout()} />\r\n                            : loginState\r\n                                ? <motion.div\r\n                                    initial={{ y: '-1vh', opacity: 0 }}\r\n                                    animate={{ y: 0, opacity: 1 }}\r\n                                    transition={{ ease: \"easeOut\", duration: .4 }}\r\n                                    className=\"profile-login\">\r\n                                    <div className=\"login-form\">\r\n                                        <span className=\"login\">Please Login</span>\r\n                                        <hr />\r\n                                        <span>Username</span>\r\n                                        <input type=\"text\" name=\"\" id=\"username-text\"\r\n                                            autoComplete=\"false\" onChange={() => handleText()} />\r\n                                        <span>Password</span>\r\n                                        <input type=\"password\" name=\"\" id=\"password-text\" onChange={() => handlePassword()} />\r\n                                        <button onClick={() => handleLogIn()}>{loading}</button>\r\n                                    </div>\r\n                                    <div className=\"register\">\r\n                                        New to Art Gallery? <span onClick={() => {\r\n                                            setLoginState(!loginState)\r\n                                            setErrorMessage(\"\")\r\n                                        }}>Create Account</span>\r\n                                    </div>\r\n                                </motion.div>\r\n                                : <FadeInBottom children={\r\n                                    <div className=\"register-user\">\r\n                                        <div className=\"register hide-mobile\">\r\n                                            <h3>Why Register?</h3>\r\n                                            <ul>\r\n                                                <li>Get unlimited free deliveries.</li>\r\n                                                <li>Place orders on you favourite Arts.</li>\r\n                                                <li>Login anywhere.</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"place\"></div>\r\n                                        <div className=\"profile-register\">\r\n                                            <span className=\"register-head\">Register</span>\r\n                                            <span className=\"register-message\">Please fill in the following details about yourself.</span>\r\n                                            <hr />\r\n                                            <span>I am here to</span>\r\n                                            <div className=\"user-type\">\r\n                                                <button className={userType === 2 ? \"selected\" : \"\"} onClick={() => setUserType(2)}>Buy Art</button>\r\n                                                <button className={userType === 1 ? \"selected\" : \"\"} onClick={() => setUserType(1)}>Sell Art</button>\r\n                                            </div>\r\n                                            <span className=\"user-detail\">Name</span>\r\n                                            <input type=\"text\" name=\"user-name\" id=\"user-detail-name\" onChange={() => handleRegUsernameName()} />\r\n                                            <span className=\"user-detail\">Username</span>\r\n                                            <input type=\"text\" name=\"user-username\" id=\"user-detail-username\" onChange={() => handleRegUsername()} />\r\n                                            <span className=\"user-detail\">Email</span>\r\n                                            <input type=\"email\" name=\"user-email\" id=\"user-detail-email\" onChange={() => handleRegEmail()} />\r\n                                            <span className=\"user-detail\">Password</span>\r\n                                            <input type=\"password\" name=\"user-password\" id=\"user-detail-password\" onChange={() => handleRegPassword()} />\r\n                                            <button type=\"submit\" className=\"register-button\" onClick={() => handleRegister()}>{regLoading}</button>\r\n                                        </div>\r\n                                        <div className=\"place\"></div>\r\n                                        <div className=\"register\">\r\n                                            Already have an account? <span onClick={() => {\r\n                                                setLoginState(!loginState)\r\n                                                setErrorMessage(\"\")\r\n                                            }}>Login</span>\r\n                                        </div>\r\n                                    </div>\r\n                                } classname=\"\" />\r\n                        }\r\n                        {userDet?.usertype === 1 ? <ArtList artList={artList} username={username} /> : <div />}\r\n                        {username !== \"null\" ? <OrdersList ordersList={ordersList} username={username} /> : <div />}\r\n                        {userDet?.usertype === 1 ? <DeliveryList deliveryList={deliveryList} /> : <div />}\r\n                    </div> : <AdminPage username={username} handleLogout={() => handleLogout()} />\r\n            }\r\n            {errorMessage.length !== 0 ? <div className=\"error-message\">{errorMessage}</div> : <span></span>}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface AdminProps {\r\n    username: string,\r\n    handleLogout: () => void\r\n}\r\nconst AdminPage: React.FC<AdminProps> = ({ username, handleLogout }) => {\r\n    const [users, setUsers] = useState<UserType[]>([])\r\n    const [art, setArt] = useState<Art[]>([]);\r\n    const [ordersList, setOrdersList] = useState<Orders[]>([])\r\n    const [logoutButton, setLogoutButton] = useState<string>('Logout')\r\n\r\n    const deleteHandleUser = (username: string) => {\r\n        deleteUser(username).then((data) => {\r\n            if (data.username === username)\r\n                window.location.reload()\r\n        })\r\n    }\r\n    const deleteHandleArt = (username: string, artname: string) => {\r\n        deleteArt(username, artname).then((data) => {\r\n            if (data.username === username)\r\n                window.location.reload()\r\n        })\r\n    }\r\n    const deleteHandleOrder = (username: string, artname: string) => {\r\n        deleteOrder(username, artname).then((data) => {\r\n            if (data.username === username)\r\n                window.location.reload()\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        allUsers().then((data) => {\r\n            setUsers(data)\r\n        })\r\n        getArt().then((data) => {\r\n            setArt(data)\r\n        })\r\n        allOrders().then((data) => {\r\n            setOrdersList(data)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"admin-page\">\r\n            <h1>Admin</h1>\r\n            <h2>{username}</h2>\r\n            <button onClick={() => { setLogoutButton('Logging Out...'); handleLogout(); setLogoutButton('Logged Out!'); }} className=\"logout\">{logoutButton}</button>\r\n            <h3>Users</h3>\r\n            <div className=\"users\">\r\n                {users.map((user, index) => (\r\n                    user.usertype !== 0 ?\r\n                        <div className=\"user-box\" key={index}>\r\n                            <div className=\"user\">\r\n                                <h4>{user.username}</h4>\r\n                                <p className=\"type\">{user.usertype === 1 ? \"Artist\" : \"Customer\"}</p>\r\n                                <p>{user.firstname}</p>\r\n                                <p>{user.email}</p>\r\n                                <img src={Delete} alt=\"delete\" className=\"delete\" onClick={() => deleteHandleUser(user.username)} />\r\n                            </div>\r\n                        </div>\r\n                        : <span />\r\n                ))}\r\n            </div>\r\n            <h3>Art</h3>\r\n            <div className=\"artP\">\r\n                {art.map((art, index) => (\r\n                    <div className=\"art-box\" key={index}>\r\n                        <div className=\"arte\">\r\n                            <h4>{art.name}</h4>\r\n                            <p>${art.price}</p>\r\n                            <img src={Delete} alt=\"delete\" className=\"delete\" onClick={() => deleteHandleArt(art.artist, art.name)} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <h3>Orders</h3>\r\n            <div className=\"ordersP\">\r\n                {ordersList.map((order, index) => (\r\n                    <div className=\"order-box\" key={index}>\r\n                        <div className=\"orderP\">\r\n                            <h4>{order.artname}</h4>\r\n                            <p>At: {order.address}</p>\r\n                            <p>To: {order.username}</p>\r\n                            <p>Booked: {order.booked}</p>\r\n                            <p>Before: {order.due}</p>\r\n                            <img src={Delete} alt=\"delete\" className=\"delete\" onClick={() => deleteHandleOrder(order.username, order.artname)} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface UserDetailProps {\r\n    username: string,\r\n    userDet: UserType | undefined,\r\n    handleLogout: () => void\r\n}\r\nconst UserDetail: React.FC<UserDetailProps> = ({ username, userDet, handleLogout }) => {\r\n    const [logoutButton, setLogoutButton] = useState<string>('Logout')\r\n    return (\r\n        <FadeInTop classname=\"profile\" children={\r\n            <div>\r\n                <h2>Profile</h2>\r\n                <div className=\"profile-card\">\r\n                    <div className=\"user-heading\">\r\n                        <h1>{username}</h1>\r\n                        <h2>{userDet?.usertype === 1 ? \"Artist\" : \"Customer\"}</h2>\r\n                    </div>\r\n                    <div className=\"user-detail\">\r\n                        <h3>{userDet?.firstname}</h3>\r\n                        <h3>{userDet?.email}</h3>\r\n                        <a href=\"mailto:nithins674@gmail.com\" className=\"c-admin\">Contact admin</a>\r\n                    </div>\r\n                    <div className=\"user-buttons\">\r\n                        {userDet?.usertype === 1 ? <Link to=\"/create\">Create Art</Link> : <span></span>}\r\n                        <div className=\"space\"></div>\r\n                        <button onClick={() => { setLogoutButton('Logging Out...'); handleLogout(); setLogoutButton('Logged Out!'); }} className=\"logout\">{logoutButton}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        } />\r\n    )\r\n}\r\n\r\ninterface ArtListProps {\r\n    artList: Art[],\r\n    username: string\r\n}\r\nconst ArtList: React.FC<ArtListProps> = ({ artList, username }) => {\r\n\r\n    const handleDeleteArt = (artname: string) => {\r\n        deleteArt(username, artname).then((res) => {\r\n            if (res.username == username)\r\n                window.location.reload()\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"orders-list\">\r\n            <h2>Your Uploads</h2>\r\n            <div className=\"list\">\r\n                {artList !== undefined && artList !== null && artList.length !== 0 ?\r\n                    artList?.map((art, index) => (\r\n                        <motion.div key={index}\r\n                            className=\"list-item\"\r\n                            initial={{ scaleY: .1 }}\r\n                            animate={{ scaleY: 1 }}\r\n                            transition={{ ease: \"easeOut\", duration: .2 }}\r\n                        >\r\n                            <Link to={{\r\n                                pathname: \"/view/\" + art.name\r\n                            }}>View</Link>\r\n                            <h3>{art.name}</h3>\r\n                            <span>{art.about}</span>\r\n                            <span className=\"price\">${art.price}</span>\r\n                            <img src={Delete} alt=\"delete\" className=\"delete\" onClick={() => handleDeleteArt(art.name)} />\r\n                        </motion.div>\r\n                    ))\r\n                    : <ErrorBig errorMsg=\"No Uploads Yet\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface OrderProp {\r\n    ordersList: Orders[],\r\n    username: string\r\n}\r\nconst OrdersList: React.FC<OrderProp> = ({ ordersList, username }) => {\r\n\r\n    const handleDeleteOrder = (artname: string) => {\r\n        deleteOrder(username, artname).then((res) => {\r\n            if (res.username == username)\r\n                window.location.reload()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"orders-list\"\r\n        >\r\n            <h2>Your Orders</h2>\r\n            <div className=\"list\">\r\n                {ordersList !== undefined && ordersList !== null && ordersList.length !== 0 ?\r\n                    ordersList?.map((order, index) => (\r\n                        <motion.div key={index}\r\n                            className=\"list-item\"\r\n                            initial={{ scaleY: .1 }}\r\n                            animate={{ scaleY: 1 }}\r\n                            transition={{ ease: \"easeOut\", duration: .2 }}\r\n                        >\r\n                            <h3>{order.artname}</h3>\r\n                            <span>Delivery at: {order.address}</span>\r\n                            <span>Due: {order.due}</span>\r\n                            <span>Booked: {order.booked}</span>\r\n                            <img src={Delete} alt=\"delete\" className=\"delete\" onClick={() => handleDeleteOrder(order.artname)} />\r\n                        </motion.div>\r\n                    ))\r\n                    : <ErrorBig errorMsg=\"No Orders Yet\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface DeliveryProp {\r\n    deliveryList: Orders[],\r\n}\r\nconst DeliveryList: React.FC<DeliveryProp> = ({ deliveryList }) => {\r\n    return (\r\n        <div\r\n            className=\"orders-list\"\r\n        >\r\n            <h2>Your Deliveries</h2>\r\n            <div className=\"list\">\r\n                {deliveryList !== undefined && deliveryList !== null && deliveryList.length !== 0 ?\r\n                    deliveryList?.map((order, index) => (\r\n                        <motion.div key={index}\r\n                            className=\"list-item\"\r\n                            initial={{ scaleY: .1 }}\r\n                            animate={{ scaleY: 1 }}\r\n                            transition={{ ease: \"easeOut\", duration: .2 }}\r\n                        >\r\n                            <h3>{order.artname}</h3>\r\n                            <span>Delivery to: {order.username}</span>\r\n                            <span>Delivery at: {order.address}</span>\r\n                            <span>Due: {order.due}</span>\r\n                            <span>Booked: {order.booked}</span>\r\n                        </motion.div>\r\n                    ))\r\n                    : <ErrorBig errorMsg=\"No Bookings Yet\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\animation\\FadeInBottom.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Error.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\animation\\FadeInAnim.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\CreateArt.tsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":63,"column":8,"nodeType":"87","endLine":63,"endColumn":10,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":70,"column":21,"nodeType":"91","endLine":70,"endColumn":135},{"ruleId":"92","severity":1,"message":"93","line":14,"column":12,"nodeType":"94","messageId":"95","endLine":14,"endColumn":20},{"ruleId":"92","severity":1,"message":"96","line":28,"column":17,"nodeType":"94","messageId":"95","endLine":28,"endColumn":19},{"ruleId":"85","severity":1,"message":"97","line":37,"column":8,"nodeType":"87","endLine":37,"endColumn":10,"suggestions":"98"},{"ruleId":"85","severity":1,"message":"97","line":113,"column":8,"nodeType":"87","endLine":113,"endColumn":10,"suggestions":"99"},{"ruleId":"85","severity":1,"message":"86","line":66,"column":8,"nodeType":"87","endLine":66,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":354,"column":30,"nodeType":"103","messageId":"104","endLine":354,"endColumn":32},{"ruleId":"101","severity":1,"message":"102","line":393,"column":30,"nodeType":"103","messageId":"104","endLine":393,"endColumn":32},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["107"],"jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role textbox. This role is implicit on the element input.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'vh' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["108"],["109"],["110"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},{"desc":"111","fix":"116"},"Update the dependencies array to be: [getData]",{"range":"117","text":"118"},"Update the dependencies array to be: [history]",{"range":"119","text":"120"},{"range":"121","text":"120"},{"range":"122","text":"118"},[2276,2278],"[getData]",[1260,1262],"[history]",[4045,4047],[2355,2357]]