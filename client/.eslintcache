[{"B:\\Web Dev\\mini-dbms\\client\\src\\index.tsx":"1","B:\\Web Dev\\mini-dbms\\client\\src\\reportWebVitals.ts":"2","B:\\Web Dev\\mini-dbms\\client\\src\\App.tsx":"3","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Home.tsx":"4","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Nav.tsx":"5","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Search.tsx":"6","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Orders.tsx":"7","B:\\Web Dev\\mini-dbms\\client\\src\\components\\api.ts":"8","B:\\Web Dev\\mini-dbms\\client\\src\\components\\ContextTypes.ts":"9","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\ArtContext.tsx":"10","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Error.tsx":"11","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\ViewArt.tsx":"12","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Loading.tsx":"13","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Profile.tsx":"14"},{"size":500,"mtime":1609862374814,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":165,"mtime":1609858812824,"results":"18","hashOfConfig":"16"},{"size":3751,"mtime":1610526880514,"results":"19","hashOfConfig":"16"},{"size":3529,"mtime":1610456688548,"results":"20","hashOfConfig":"16"},{"size":3123,"mtime":1610526241063,"results":"21","hashOfConfig":"16"},{"size":305,"mtime":1610179580542,"results":"22","hashOfConfig":"16"},{"size":1946,"mtime":1610526980463,"results":"23","hashOfConfig":"16"},{"size":263,"mtime":1610128596110,"results":"24","hashOfConfig":"16"},{"size":722,"mtime":1610116293864,"results":"25","hashOfConfig":"16"},{"size":469,"mtime":1610172146334,"results":"26","hashOfConfig":"16"},{"size":1830,"mtime":1610526282796,"results":"27","hashOfConfig":"16"},{"size":229,"mtime":1610451480167,"results":"28","hashOfConfig":"16"},{"size":10890,"mtime":1610529490214,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15xxjq0",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"B:\\Web Dev\\mini-dbms\\client\\src\\index.tsx",[],["62","63"],"B:\\Web Dev\\mini-dbms\\client\\src\\reportWebVitals.ts",[],"B:\\Web Dev\\mini-dbms\\client\\src\\App.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Home.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Nav.tsx",["64"],"import React, { useEffect, useState } from 'react'\r\nimport User from \"../resource/user.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface NavProp { }\r\nconst Nav: React.FC<NavProp> = () => {\r\n    const [toggle, setToggle] = useState<string>('toggle')\r\n    const [navIsOpen, setNavIsOpen] = useState<boolean>(false)\r\n    const [navH, setNavH] = useState<string>('100vh')\r\n    const [navcolor, setNavcolor] = useState<string>('transparent')\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if (window.scrollY >= 100) {\r\n                setNavcolor('#f9f9f9')\r\n            } else {\r\n                setNavcolor('transparent')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const toggleNav = () => {\r\n        if (!navIsOpen) {\r\n            setToggle('toggle change')\r\n            setNavH('0')\r\n        } else {\r\n            setToggle('toggle')\r\n            setNavH('100vh')\r\n        }\r\n        setNavIsOpen(!navIsOpen)\r\n    }\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: navcolor }}>\r\n                <div className=\"placeholder-to-center\"></div>\r\n                <Header imgUri={\"Logo\"} />\r\n                <div className=\"links\">\r\n                    <NavLink to=\"/home\" label=\"Home\" toggle={() => { }} />\r\n                    <NavLink to=\"/search\" label=\"Search\" toggle={() => { }} />\r\n                    <NavLink to=\"/orders\" label=\"Orders\" toggle={() => { }} />\r\n                    <Link to=\"/profile\" >\r\n                        <img src={User} alt=\"\" />\r\n                    </Link>\r\n                </div>\r\n                <div className={toggle} onClick={() => toggleNav()}>\r\n                    <div className=\"bar1\"></div>\r\n                    <div className=\"bar2\"></div>\r\n                    <div className=\"bar3\"></div>\r\n                </div>\r\n            </nav>\r\n            <motion.div\r\n                className=\"nav-menu\"\r\n                initial={{ y: navH }}\r\n                animate={{ y: navH }}\r\n                transition={{ ease: 'anticipate', duration: .4 }}>\r\n                <NavLink to=\"/home\" label=\"Home\" toggle={() => toggleNav()} />\r\n                <NavLink to=\"/search\" label=\"Search\" toggle={() => toggleNav()} />\r\n                <NavLink to=\"/orders\" label=\"Orders\" toggle={() => toggleNav()} />\r\n                <NavLink to=\"/profile\" label=\"Profile\" toggle={() => toggleNav()} />\r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface HeaderProp {\r\n    imgUri: string;\r\n}\r\nconst Header: React.FC<HeaderProp> = ({ imgUri }) => {\r\n    return (\r\n        <div className=\"header-img\">\r\n            {/* <img src={imgUri} alt=\"Header Image\" /> */}\r\n            <div><span className=\"black-header\">Art</span> Gallery</div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface NavLinkProps {\r\n    to: string;\r\n    label: string;\r\n    toggle: Function;\r\n}\r\nconst NavLink: React.FC<NavLinkProps> = ({ to, label, toggle }) => {\r\n    const history = useHistory();\r\n\r\n    const [currentpath, setCurrentpath] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        setCurrentpath(history.location.pathname)\r\n        history.listen(({ pathname }) => {\r\n            setCurrentpath(pathname)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={currentpath === to ? 'nav-link selected-nav-link' : 'nav-link'} onClick={() => toggle()}>\r\n            <Link to={to}>\r\n                <span>{label}</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Search.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Orders.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\api.ts",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\ContextTypes.ts",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\ArtContext.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Error.tsx",[],["65","66"],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\ViewArt.tsx",["67"],"import { useEffect, useState } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { search } from '../api'\r\nimport { Art } from '../ContextTypes'\r\n\r\ntype ViewArtProps = {\r\n    showArt: string\r\n}\r\n\r\nconst ViewArt = ({ match }: RouteComponentProps<ViewArtProps>) => {\r\n\r\n    const [foundArt, setFoundArt] = useState<Art>()\r\n\r\n    const getData = async () => {\r\n        search(match.params.showArt).then((data) => {\r\n            setFoundArt(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n    return (\r\n        <div className=\"view-art\">\r\n            <div className=\"jumbo\">\r\n                <img src={foundArt?.imageurl} alt={foundArt?.name} />\r\n                <div className=\"image-mask\"></div>\r\n                {/* <div className=\"image-dp\">\r\n                    <img src={foundArt?.url} alt={foundArt?.name} />\r\n                </div> */}\r\n            </div>\r\n            <div className=\"found-art\">\r\n                <img alt={foundArt?.name} src={foundArt?.imageurl} className=\"art-image\" />\r\n                <div>\r\n                    <div className=\"art-name\"> {foundArt?.name}</div>\r\n                    <div className=\"art-about\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium autem sed tenetur illo, magnam accusamus tempora doloremque modi, odio, earum sunt quas quisquam quae nesciunt ducimus ullam eligendi quos cupiditate.</div>\r\n                    <div className=\"art-rating\">Rating: {foundArt?.rating}</div>\r\n                    <div className=\"art-price\">Price: ${foundArt?.price}</div>\r\n                    <div className=\"art-buttons\">\r\n                        <button className=\"art-buy\">Buy Now</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewArt","B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Loading.tsx",[],"B:\\Web Dev\\mini-dbms\\client\\src\\components\\home\\Profile.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":93,"column":8,"nodeType":"74","endLine":93,"endColumn":10,"suggestions":"75"},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"72","severity":1,"message":"78","line":22,"column":8,"nodeType":"74","endLine":22,"endColumn":10,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["82"],["80"],["81"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [history]",{"range":"88","text":"89"},"Update the dependencies array to be: [getData]",{"range":"90","text":"91"},[3258,3260],"[history]",[541,543],"[getData]"]